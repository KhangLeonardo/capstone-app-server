name: PR Merge Control

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

jobs:
  enforce-merge-control:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set first requested reviewer as assignee
        run: |
          REVIEWER=$(jq -r '.pull_request.requested_reviewers[0].login' "$GITHUB_EVENT_PATH")
          echo "Reviewer: $REVIEWER"
          if [[ "$REVIEWER" != "null" ]]; then
            echo "Assigning $REVIEWER as the reviewer"
            curl -X POST \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.number }}/assignees \
              -d "{\"assignees\": [\"$REVIEWER\"]}"
          fi

      - name: Check if the PR has a second reviewer
        id: check-second-reviewer
        run: |
          SECOND_REVIEWER=$(jq -r '.pull_request.requested_reviewers[1].login' "$GITHUB_EVENT_PATH")

          if [[ "$SECOND_REVIEWER" == "null" ]]; then
            echo "::error::A second reviewer is required to merge this PR."
            exit 1
          fi

      - name: Check if the PR is merged by the assignee (reviewer)
        if: steps.check-second-reviewer.outcome == 'success'
        run: |
          PR_MERGED_BY=$(jq -r '.pull_request.merged_by.login' "$GITHUB_EVENT_PATH")
          PR_ASSIGNEE=$(jq -r '.pull_request.assignee.login' "$GITHUB_EVENT_PATH")

          if [[ "$PR_MERGED_BY" != "$PR_ASSIGNEE" ]]; then
            echo "::error::Only the assigned reviewer can merge this PR."
            exit 1
          fi
