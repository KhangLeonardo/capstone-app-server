version: '3.9'

services:
  # postgres:
  #   build:
  #     context: .
  #     dockerfile: ./dockerfiles/mk-pg.Dockerfile
  #   container_name: mk-pg
  #   environment:
  #     POSTGRES_HOST: ${POSTGRES_HOST}
  #     POSTGRES_DB: ${POSTGRES_DB}
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #   volumes:
  #     - postgres-data:/var/lib/postgresql/data
  #   ports:
  #     - '5432:5432'
  #   networks:
  #     - backend
  #   restart: unless-stopped
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: '0.5'
  #         memory: 512M
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 3

  redis:
    image: redis:7.2.4-bookworm
    container_name: mk-redis
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    environment:
      # - REDIS_HOST=${REDIS_HOST}
      - REDIS_USERNAME=${REDIS_USERNAME}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - redis-data:/data
    ports:
      - '6379:6379'
    networks:
      - backend
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # mobile-appserver:
  #   image: khangtgr/mobile-appserver:latest
  #   environment:
  #     POSTGRES_HOST: ${POSTGRES_HOST}
  #     POSTGRES_DB: ${POSTGRES_DB}
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #     REDIS_HOST: ${REDIS_HOST}
  #     REDIS_USERNAME: ${REDIS_USERNAME}
  #     REDIS_PASSWORD: ${REDIS_PASSWORD}
  #     LOCALHOST_PORT: ${LOCALHOST_PORT}
  #     JWT_SECRET: ${JWT_SECRET}
  #     JWT_EXPIRATION_TIME: ${JWT_EXPIRATION_TIME}
  #     FIREBASE_PROJECT_ID: ${FIREBASE_PROJECT_ID}
  #     FIREBASE_PRIVATE_KEY_ID: ${FIREBASE_PRIVATE_KEY_ID}
  #     FIREBASE_PRIVATE_KEY: ${FIREBASE_PRIVATE_KEY}
  #     FIREBASE_CLIENT_EMAIL: ${FIREBASE_CLIENT_EMAIL}
  #     FIREBASE_CLIENT_ID: ${FIREBASE_CLIENT_ID}
  #     AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
  #     AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
  #     AWS_REGION: ${AWS_REGION}
  #     AWS_S3_BUCKET_NAME: ${AWS_S3_BUCKET_NAME}
  #     S3_BUCKET_NAME: ${S3_BUCKET_NAME}
  #   depends_on:
  #     - redis
  #   networks:
  #     - backend
  #   restart: unless-stopped
  #   deploy:
  #     replicas: 1
  #     resources:
  #       limits:
  #         cpus: '0.5'
  #         memory: 512M
          
  # pgadmin:
  #   image: dpage/pgadmin4:snapshot
  #   container_name: mk-pgadmin
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
  #     PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
  #     PGADMIN_LISTEN_PORT: ${PGADMIN_PORT}
  #   volumes:
  #     - pgadmin-data:/var/lib/pgadmin
  #   ports:
  #     - "${PGADMIN_PORT}:${PGADMIN_PORT}"
  #   depends_on:
  #     - postgres
  #   networks:
  #     - backend
  #   restart: unless-stopped
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: '0.5'
  #         memory: 256M
  #   healthcheck:
  #     test: ["CMD", "pg_isready"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 3

networks:
  backend:
    driver: bridge

volumes:
  postgres-data:
  pgadmin-data:
  redis-data:
